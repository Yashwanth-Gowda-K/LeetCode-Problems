from collections import deque

class MyStack:

    def __init__(self):
       
        self.main_queue = deque()
        self.temp_queue = deque()

    def push(self, x: int) -> None:
       
        self.main_queue.append(x)

    def pop(self) -> int:
       
        while len(self.main_queue) > 1:
            self.temp_queue.append(self.main_queue.popleft())
        
       
        popped_element = self.main_queue.popleft()
        
       
        self.main_queue, self.temp_queue = self.temp_queue, self.main_queue
        
        return popped_element

    def top(self) -> int:
        # Similar to pop but we need to keep the element
        while len(self.main_queue) > 1:
            self.temp_queue.append(self.main_queue.popleft())
        
        top_element = self.main_queue[0]
        self.temp_queue.append(self.main_queue.popleft())
        
        # Swap the queues
        self.main_queue, self.temp_queue = self.temp_queue, self.main_queue
        
        return top_element

    def empty(self) -> bool:
        return len(self.main_queue) == 0
